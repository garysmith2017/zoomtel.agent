// <auto-generated />
using System;
using EFCoreRepository.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Zoomtel.PersistComm.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20201208012232_addInBoundEntity")]
    partial class addInBoundEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zoomtel.Entity.Account.AccountEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("Email")
                        .HasMaxLength(300);

                    b.Property<string>("LastIp");

                    b.Property<string>("LastUserAgent");

                    b.Property<int>("LoginCount");

                    b.Property<string>("LoginName")
                        .HasMaxLength(30);

                    b.Property<string>("LoginPwd")
                        .HasMaxLength(100);

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("PassSalt");

                    b.Property<string>("Phone")
                        .HasMaxLength(20);

                    b.Property<string>("RealName");

                    b.Property<int>("Sex");

                    b.Property<bool>("Status");

                    b.HasKey("Uid");

                    b.ToTable("T_SYS_ACCOUNT");
                });

            modelBuilder.Entity("Zoomtel.Entity.Account.AccountRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<Guid>("Uid");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_ACCOUNTROLE");
                });

            modelBuilder.Entity("Zoomtel.Entity.AuditInfo.AuditInfoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("ActionDesc");

                    b.Property<string>("Area");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(500);

                    b.Property<string>("Controller");

                    b.Property<string>("ControllerDesc");

                    b.Property<long>("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<string>("IP");

                    b.Property<string>("LoginName");

                    b.Property<string>("Parameters");

                    b.Property<string>("Result");

                    b.Property<Guid>("Uid");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_AUDITINFO");
                });

            modelBuilder.Entity("Zoomtel.Entity.BaseType.BaseTypeInfoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DelStatus");

                    b.Property<string>("EXTAttr1");

                    b.Property<string>("EXTAttr2");

                    b.Property<string>("EXTAttr3");

                    b.Property<string>("EXTAttr4");

                    b.Property<string>("EXTAttr5");

                    b.Property<string>("Remarks");

                    b.Property<string>("Seq");

                    b.Property<string>("TypeCode");

                    b.Property<string>("TypeContent");

                    b.Property<string>("TypeFlag");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_BASETYPEINFO");
                });

            modelBuilder.Entity("Zoomtel.Entity.Menu.MenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(150);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<int>("Fid");

                    b.Property<string>("Icon");

                    b.Property<string>("MenuName");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(150);

                    b.Property<int>("Seq");

                    b.Property<string>("Target")
                        .HasMaxLength(20);

                    b.Property<string>("Url");

                    b.Property<bool>("Visible");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_MENUS");
                });

            modelBuilder.Entity("Zoomtel.Entity.Quartz.TaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BeginDate");

                    b.Property<string>("ClassName");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("Cron");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Group");

                    b.Property<int>("IntervalInSeconds");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<int>("RepeatCount");

                    b.Property<int>("Status");

                    b.Property<string>("TaskCode");

                    b.Property<string>("TaskName");

                    b.Property<int>("TriggerType");

                    b.HasKey("Id");

                    b.ToTable("T_QUARTZ_TASK");
                });

            modelBuilder.Entity("Zoomtel.Entity.Quartz.TaskGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GroupCode");

                    b.Property<string>("GroupName");

                    b.HasKey("Id");

                    b.ToTable("T_QUARTZ_TASKGROUP");
                });

            modelBuilder.Entity("Zoomtel.Entity.Quartz.TaskLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Msg");

                    b.Property<Guid>("TaskId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("T_QUARTZ_TASKLOG");
                });

            modelBuilder.Entity("Zoomtel.Entity.Role.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("Remark");

                    b.Property<string>("RoleName");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_ROLES");
                });

            modelBuilder.Entity("Zoomtel.Entity.Role.RoleMenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MenuId");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_ROLEMENUS");
                });

            modelBuilder.Entity("Zoomtel.Entity.Role.RolePermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PermissionCode");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("T_SYS_ROLEPERMISSION");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ATSCellEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CellLevel");

                    b.Property<string>("CellName");

                    b.Property<string>("CellNo");

                    b.Property<string>("CellType");

                    b.Property<int>("Col");

                    b.Property<int>("Distance");

                    b.Property<int>("Floor");

                    b.Property<string>("LanewayNo");

                    b.Property<int>("Status");

                    b.Property<int>("WorkStatus");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_ATSCELL");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ATSCellInfoDetailEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<string>("CellNo");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<int>("Qty");

                    b.Property<int>("RequestQty");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_ATSCELLINFO_DETAIL");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ATSCellInfoEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BatchCode");

                    b.Property<string>("BillNo");

                    b.Property<string>("CellNo");

                    b.Property<string>("Consignor");

                    b.Property<DateTime>("Createtime");

                    b.Property<int>("Dismantle");

                    b.Property<DateTime>("InBoundTime");

                    b.Property<string>("IsBind");

                    b.Property<string>("IsBindMsg");

                    b.Property<string>("IsScatter");

                    b.Property<string>("ItemType");

                    b.Property<string>("PalletNo");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<string>("Remarks");

                    b.Property<string>("SpecItem");

                    b.Property<string>("StackType");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_ATSCELLINFO");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.AreaStockDetailEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("Consignor");

                    b.Property<DateTime>("EntryTime");

                    b.Property<string>("IsLocked");

                    b.Property<string>("ItemType");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<int>("Qty");

                    b.Property<string>("SpecItem");

                    b.Property<string>("ThroughNo");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_AREASTOCKINFO_DETAIL");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ConsignorEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Contact");

                    b.Property<string>("PhoneNum");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_CONSIGNOR");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.DeviceStatusEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BusinessType");

                    b.Property<int>("Capacity");

                    b.Property<string>("DeviceName");

                    b.Property<string>("DeviceNo");

                    b.Property<int>("DeviceStatus");

                    b.Property<int>("MaxTaskNum");

                    b.Property<string>("StationNo");

                    b.Property<int>("Status");

                    b.Property<string>("ThrougNo");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_DEVICESTATUS");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.EquipmentEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("CurrentMode");

                    b.Property<string>("DeviceJobId");

                    b.Property<string>("DeviceStatus");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("RequestMode");

                    b.Property<string>("TuTypr");

                    b.Property<string>("WmsDeviceId");

                    b.Property<string>("WmsPositionId");

                    b.HasKey("Id");

                    b.ToTable("INF_EQUIPMENTINFO");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.InBoundEntity", b =>
                {
                    b.Property<string>("InBoundId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentTime");

                    b.Property<string>("BillId");

                    b.Property<string>("BoundType");

                    b.Property<string>("Consignsor");

                    b.Property<string>("ContractNo");

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("FinishTime");

                    b.Property<int>("InType");

                    b.Property<string>("Navicert");

                    b.Property<DateTime>("NoticeDate");

                    b.Property<int>("Qty");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("SendTime");

                    b.Property<string>("ShipFrom");

                    b.Property<string>("ShipToId");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("Status");

                    b.Property<string>("Supplier");

                    b.Property<string>("TaskNoticeId");

                    b.Property<string>("VehicleLicense");

                    b.Property<string>("VehicleMan");

                    b.Property<string>("VehiclePhone");

                    b.HasKey("InBoundId");

                    b.ToTable("T_WMS_INBOUND");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ABCCode");

                    b.Property<string>("BarCode");

                    b.Property<string>("BaseUomId");

                    b.Property<string>("CanScan");

                    b.Property<string>("CatId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("DCNo");

                    b.Property<string>("DefaultUomId");

                    b.Property<string>("DelStatus");

                    b.Property<string>("DoubleTake");

                    b.Property<int>("FullCountDown");

                    b.Property<int>("FullCountUp");

                    b.Property<double>("HSize");

                    b.Property<double>("IHeight");

                    b.Property<double>("ILength");

                    b.Property<double>("IWidth");

                    b.Property<int>("IsLotCtrl");

                    b.Property<string>("ItemKind");

                    b.Property<string>("ItemName");

                    b.Property<string>("ItemNo");

                    b.Property<double>("ItemPrice");

                    b.Property<string>("ItemTypeId");

                    b.Property<double>("JSize");

                    b.Property<double>("JTSize");

                    b.Property<string>("Kind");

                    b.Property<string>("ManufacturerId");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("OutType");

                    b.Property<string>("PackBarCode");

                    b.Property<double>("PalletRatio");

                    b.Property<string>("ProduceArea");

                    b.Property<string>("SecStackType");

                    b.Property<int>("ShelfLife");

                    b.Property<string>("ShelfLifeType");

                    b.Property<string>("ShipType");

                    b.Property<string>("ShipperId");

                    b.Property<string>("ShortName");

                    b.Property<string>("Spec");

                    b.Property<string>("StackType");

                    b.Property<string>("StorageCondition");

                    b.Property<double>("TSize");

                    b.Property<string>("UnStackMode");

                    b.Property<string>("VendorId");

                    b.Property<double>("WSize");

                    b.Property<double>("WZSize");

                    b.Property<double>("Weight");

                    b.Property<double>("XSize");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_ITEM");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.JobEntity", b =>
                {
                    b.Property<string>("JobId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClassFullName");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("JobDesc");

                    b.Property<string>("JobTrigger");

                    b.Property<string>("JobTriggerPara");

                    b.Property<string>("MessageCode");

                    b.Property<string>("MessageText");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("ResponseSVRName");

                    b.Property<string>("ReturnValue");

                    b.Property<string>("Status");

                    b.HasKey("JobId");

                    b.ToTable("T_WMS_JOB");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.OutBoundEntity", b =>
                {
                    b.Property<string>("OutBoundId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentTime");

                    b.Property<string>("BoundType");

                    b.Property<string>("Consignsor");

                    b.Property<string>("ContractNo");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DelStatus");

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("FinishTime");

                    b.Property<string>("Navicert");

                    b.Property<DateTime>("NoticeDate");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("OutBoundType");

                    b.Property<DateTime>("OutTime");

                    b.Property<int>("Qty");

                    b.Property<string>("Remarks");

                    b.Property<DateTime>("SendTime");

                    b.Property<string>("ShipTo");

                    b.Property<string>("ShipToId");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("Status");

                    b.Property<string>("Supplier");

                    b.Property<string>("TaskNoticeId");

                    b.Property<int>("UserId");

                    b.Property<string>("VehicleLicense");

                    b.Property<string>("VehicleMan");

                    b.Property<string>("VehicleNo");

                    b.Property<string>("VehiclePhone");

                    b.HasKey("OutBoundId");

                    b.ToTable("T_WMS_OUTBOUND");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.StationEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BufferNo");

                    b.Property<string>("ControlNo");

                    b.Property<string>("Platform");

                    b.Property<string>("RelateNo");

                    b.Property<string>("StationCheckNo");

                    b.Property<string>("StationDesc");

                    b.Property<string>("StationNo");

                    b.Property<string>("StationType");

                    b.Property<string>("TechNo");

                    b.Property<string>("VStationNo");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_STATIONINFO");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.StorageAreaEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaCode");

                    b.Property<string>("AreaName");

                    b.Property<string>("Remarks");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_STORAGEAREA");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.Base.ThroughEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActCount");

                    b.Property<string>("AreaNo");

                    b.Property<int>("BoxCount");

                    b.Property<string>("CIgaretteName");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteType");

                    b.Property<int>("CleanThreshold");

                    b.Property<string>("CleanUp");

                    b.Property<string>("GroupNo");

                    b.Property<int>("LastMantissa");

                    b.Property<string>("LineNum");

                    b.Property<int>("MachineSeq");

                    b.Property<int>("Mantissa");

                    b.Property<string>("MantissaLess");

                    b.Property<string>("ReplenishLine");

                    b.Property<int>("Seq");

                    b.Property<string>("Status");

                    b.Property<int>("Threshold");

                    b.Property<string>("ThrougNo");

                    b.Property<string>("ThroughDesc");

                    b.Property<int>("TransportationLine");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_THROUGH");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.BarCodeListEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<int>("CodeSeq");

                    b.Property<string>("EXTAttr1");

                    b.Property<string>("EXTAttr2");

                    b.Property<string>("EXTAttr3");

                    b.Property<string>("EXTAttr4");

                    b.Property<string>("EXTAttr5");

                    b.Property<int>("EntryNum");

                    b.Property<string>("EntryTaskId");

                    b.Property<int>("StackNum");

                    b.Property<string>("StackTaskId");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_BARCODELIST");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InBoundLineEntity", b =>
                {
                    b.Property<string>("InboundDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AboxQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<string>("BdpCigcode");

                    b.Property<string>("BoxIdentifier");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("Consignsor");

                    b.Property<string>("InboundId");

                    b.Property<string>("IsValid");

                    b.Property<int>("ItemQty");

                    b.Property<string>("ItemType");

                    b.Property<int>("LockQty");

                    b.Property<string>("OtherQty");

                    b.Property<int>("PkBoxQty");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<string>("SpecItem");

                    b.Property<int>("Status");

                    b.Property<int>("TaskQty");

                    b.Property<string>("WmsTaskNoticeId");

                    b.Property<string>("WmsTaskNoticeItemId");

                    b.HasKey("InboundDetailId");

                    b.ToTable("T_WMS_INBOUNDLINE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InBoundTaskEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceNo");

                    b.Property<DateTime>("FinishTime");

                    b.Property<string>("InboundDetailId");

                    b.Property<int>("InboundType");

                    b.Property<int>("IsDeal");

                    b.Property<string>("ItemType");

                    b.Property<int>("LockQty");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<string>("SpecItem");

                    b.Property<string>("Status");

                    b.Property<int>("TaskQty");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_INBOUNDTASK");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InfEquipmentRequest", b =>
                {
                    b.Property<string>("WmsPositionid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<string>("EnterBy");

                    b.Property<DateTime>("EnterDate");

                    b.Property<int>("InboundNo");

                    b.Property<string>("JobId");

                    b.Property<string>("PalletNo");

                    b.Property<string>("RequestQty");

                    b.Property<int>("RequestType");

                    b.Property<string>("RespondBy");

                    b.Property<DateTime>("RespondDate");

                    b.Property<int>("Status");

                    b.Property<int>("TuType");

                    b.Property<string>("WareHouseId");

                    b.Property<string>("WmsDeviceid");

                    b.HasKey("WmsPositionid");

                    b.ToTable("INF_EQUIPMENTREQUEST");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InfJobFeedback", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("EnterBy");

                    b.Property<DateTime>("EnterDate");

                    b.Property<string>("ErrorCode");

                    b.Property<int>("FeedbackStatus");

                    b.Property<string>("IsDeal");

                    b.Property<int>("PlanQty");

                    b.Property<string>("RespondBy");

                    b.Property<int>("RespondCount");

                    b.Property<DateTime>("RespondDate");

                    b.Property<int>("RespondMsg");

                    b.Property<int>("Status");

                    b.Property<string>("WareHouseId");

                    b.Property<string>("WmsJobid");

                    b.HasKey("Id");

                    b.ToTable("INF_JOBFEEDBACK");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InventoryEntity", b =>
                {
                    b.Property<string>("InventroyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Consignor");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("InventoryType");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("Qty");

                    b.Property<string>("Status");

                    b.HasKey("InventroyId");

                    b.ToTable("T_WMS_INVENTORY");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.InventoryLineEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaNo");

                    b.Property<string>("BarCode");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("Consignor");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<int>("EndQty");

                    b.Property<int>("InQty");

                    b.Property<int>("InitQty");

                    b.Property<string>("InventoryId");

                    b.Property<string>("InventoryType");

                    b.Property<int>("ItemQty");

                    b.Property<string>("ItemType");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<int>("OutQty");

                    b.Property<string>("SpecItem");

                    b.Property<string>("ThroughNo");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_INVENTORYLINE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.JobDownloadEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<string>("BillNo");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("CurrentMode");

                    b.Property<string>("EXTAttr1");

                    b.Property<string>("EXTAttr2");

                    b.Property<string>("EXTAttr3");

                    b.Property<string>("EXTAttr4");

                    b.Property<string>("EXTAttr5");

                    b.Property<DateTime>("EntryTime");

                    b.Property<string>("ForceFlag");

                    b.Property<int>("FullCount");

                    b.Property<int>("InputType");

                    b.Property<string>("IsBind");

                    b.Property<string>("IsScan");

                    b.Property<string>("IsWrap");

                    b.Property<string>("ItemType");

                    b.Property<int>("JobType");

                    b.Property<string>("MachineNo");

                    b.Property<int>("MaxDelayTime");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("PalletNo");

                    b.Property<int>("PlanQty");

                    b.Property<string>("PlatForm");

                    b.Property<string>("PreJobId");

                    b.Property<int>("Priority");

                    b.Property<string>("Remarks");

                    b.Property<string>("RequestMode");

                    b.Property<DateTime>("RespondTime");

                    b.Property<string>("ResponseBy");

                    b.Property<int>("ResponseCount");

                    b.Property<string>("ResponseMsg");

                    b.Property<int>("SortNum");

                    b.Property<string>("Source");

                    b.Property<string>("SpecItem");

                    b.Property<string>("StackType");

                    b.Property<int>("Status");

                    b.Property<string>("Target");

                    b.Property<string>("TaskNo");

                    b.Property<string>("TransferFlag");

                    b.Property<int>("TuType");

                    b.Property<int>("UnStackMode");

                    b.Property<string>("WarehouseId");

                    b.Property<int>("Weight");

                    b.Property<string>("WmsJobId");

                    b.HasKey("Id");

                    b.ToTable("INF_JOBDOWNLOAD");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.OutBoundLineEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<string>("BoxIdentifier");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("Consignsor");

                    b.Property<int>("ItemQty");

                    b.Property<string>("ItemType");

                    b.Property<int>("LockQty");

                    b.Property<int>("OkQty");

                    b.Property<string>("OutboundId");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<string>("SpecItem");

                    b.Property<string>("Status");

                    b.Property<string>("TruckNo");

                    b.Property<string>("WmsTaskNoticeId");

                    b.Property<string>("WmsTaskNoticeItemId");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_OUTBOUNDLINE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.OutBoundTaskEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("DeviceNo");

                    b.Property<DateTime>("FinishTime");

                    b.Property<int>("IsDeal");

                    b.Property<string>("ItemType");

                    b.Property<int>("LockQty");

                    b.Property<int>("OkQty");

                    b.Property<int>("OutType");

                    b.Property<string>("OutboundDetailId");

                    b.Property<DateTime>("ProductionDate");

                    b.Property<string>("SpecItem");

                    b.Property<string>("Status");

                    b.Property<int>("TaskQty");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_OUTBOUNDTASK");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.SourceBoundNoticeEntity", b =>
                {
                    b.Property<string>("WmsTaskNoticeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentTime");

                    b.Property<string>("BuildLocDesc");

                    b.Property<string>("BuildLocId");

                    b.Property<string>("BusType");

                    b.Property<string>("Carrier");

                    b.Property<string>("ContractNo");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("EquipmentNo");

                    b.Property<string>("MaterialType");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<DateTime>("NoticeDate");

                    b.Property<string>("NoticeNo");

                    b.Property<int>("Quantity");

                    b.Property<string>("QuickFlag");

                    b.Property<string>("Remarks");

                    b.Property<int>("SecondQty");

                    b.Property<string>("SecondUom");

                    b.Property<DateTime>("SendTime");

                    b.Property<string>("ShipFrom");

                    b.Property<string>("ShipFromId");

                    b.Property<string>("ShipTo");

                    b.Property<string>("ShipToId");

                    b.Property<string>("ShipToInv");

                    b.Property<string>("ShipToInvId");

                    b.Property<string>("Status");

                    b.Property<string>("TaskType");

                    b.Property<string>("TransportLicense");

                    b.Property<string>("Uom");

                    b.Property<string>("VehicleLicense");

                    b.Property<string>("VehicleMan");

                    b.Property<string>("VehiclePhone");

                    b.HasKey("WmsTaskNoticeId");

                    b.ToTable("T_WMS_SOURCEBOUNDNOTICE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.SourceBoundNoticeLineEntity", b =>
                {
                    b.Property<string>("NoticeLineId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BoxIdentifier");

                    b.Property<string>("Brand");

                    b.Property<string>("BuildLocDesc");

                    b.Property<string>("BuildLocId");

                    b.Property<string>("Grade");

                    b.Property<string>("ItemName");

                    b.Property<string>("ItemNo");

                    b.Property<string>("LineNum");

                    b.Property<string>("OriginPlace");

                    b.Property<string>("ProdIdentifier");

                    b.Property<string>("Quantity");

                    b.Property<string>("ReversionNum");

                    b.Property<string>("SecondQty");

                    b.Property<string>("SecondUom");

                    b.Property<string>("Spec");

                    b.Property<string>("Uom");

                    b.Property<string>("WmsTaskNoticeId");

                    b.Property<string>("YearOf");

                    b.HasKey("NoticeLineId");

                    b.ToTable("T_WMS_SOURCEBOUNDNOTICE_LINE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.TaskApplyEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActQty");

                    b.Property<string>("BarCode");

                    b.Property<string>("BatchCode");

                    b.Property<string>("BillNo");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<string>("CurrentMode");

                    b.Property<string>("EXTAttr1");

                    b.Property<string>("EXTAttr2");

                    b.Property<string>("EXTAttr3");

                    b.Property<string>("EXTAttr4");

                    b.Property<string>("EXTAttr5");

                    b.Property<DateTime>("EntryTime");

                    b.Property<string>("ForceFlag");

                    b.Property<int>("FullCount");

                    b.Property<int>("InputType");

                    b.Property<string>("IsBind");

                    b.Property<string>("IsScan");

                    b.Property<string>("IsWrap");

                    b.Property<string>("ItemType");

                    b.Property<int>("JobType");

                    b.Property<string>("MachineNo");

                    b.Property<int>("MaxDelayTime");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("PalletNo");

                    b.Property<int>("PlanQty");

                    b.Property<string>("PlatForm");

                    b.Property<string>("PreJobId");

                    b.Property<int>("Priority");

                    b.Property<string>("Remarks");

                    b.Property<string>("RequestMode");

                    b.Property<DateTime>("RespondTime");

                    b.Property<string>("ResponseBy");

                    b.Property<int>("ResponseCount");

                    b.Property<string>("ResponseMsg");

                    b.Property<int>("SortNum");

                    b.Property<string>("Source");

                    b.Property<string>("SpecItem");

                    b.Property<string>("StackType");

                    b.Property<int>("Status");

                    b.Property<string>("Target");

                    b.Property<string>("TaskNo");

                    b.Property<string>("TransferFlag");

                    b.Property<int>("TuType");

                    b.Property<int>("UnStackMode");

                    b.Property<string>("WarehouseId");

                    b.Property<int>("Weight");

                    b.Property<string>("WmsJobId");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_TASKAPPLY");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.TransferEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BarQty");

                    b.Property<int>("BoxQty");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<int>("DelStatus");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("OutCheckId");

                    b.Property<string>("OutCheckName");

                    b.Property<string>("OutCheckTime");

                    b.Property<string>("ReceiveCheckId");

                    b.Property<string>("ReceiveCheckName");

                    b.Property<string>("ReceiveCheckTime");

                    b.Property<string>("SourceAreaName");

                    b.Property<string>("SourceAreaNo");

                    b.Property<int>("Status");

                    b.Property<string>("TargetAreaName");

                    b.Property<string>("TargetAreaNo");

                    b.Property<int>("TransferType");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_TRANSFER");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.TransferLineEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode");

                    b.Property<int>("BarQty");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("ItemType");

                    b.Property<string>("ParentId");

                    b.Property<string>("SourceAreaNo");

                    b.Property<string>("SpecItem");

                    b.Property<string>("TargetThroughNo");

                    b.Property<string>("ThroughNo");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_TRANSFERLINE");
                });

            modelBuilder.Entity("Zoomtel.Entity.Wms.InOut.TransferListEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaNo");

                    b.Property<string>("BarCode");

                    b.Property<int>("BarQty");

                    b.Property<string>("BatchCode");

                    b.Property<string>("BillNo");

                    b.Property<int>("BoxQty");

                    b.Property<string>("CellNo");

                    b.Property<string>("CigaretteCode");

                    b.Property<string>("CigaretteName");

                    b.Property<string>("CigaretteType");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime?>("CreatedTime");

                    b.Property<string>("Creator");

                    b.Property<DateTime>("FinishTime");

                    b.Property<string>("GroupNo");

                    b.Property<int>("InOutType");

                    b.Property<string>("ItemType");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Modifier");

                    b.Property<string>("OrderNo");

                    b.Property<string>("SpecItem");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("T_WMS_TRANSFERLIST");
                });
#pragma warning restore 612, 618
        }
    }
}
